name: Clang Tidy Check
description: Checks C++ code quality with clang-tidy
author: T-im4i-k

inputs:
  version:
    description: Specifies the clang-tidy version to use.
    type: string
    required: false
    default: '__UNSET__'

  compile-commands-path:
    description: Path to your compile_commands.json compilation database.
    type: string
    required: true

  file-exclude-regex:
    description: Extended regular expression to exclude specific files from checking.
    type: string
    required: false
    default: '__UNSET__'

  checks:
    description: Comma-separated list of checks to enable or disable.
    type: string
    required: false
    default: '__UNSET__'

  warnings-as-errors:
    description: Comma-separated list of warnings to treat as errors.
    type: string
    required: false
    default: '__UNSET__'

  header-filter:
    description: Extended regular expression to include specific header files in the check.
    type: string
    required: false
    default: '__UNSET__'

  config:
    description: Inline configuration in YAML/JSON format.
    type: string
    required: false
    default: '__UNSET__'

  config-file:
    description: Path to a .clang-tidy file or custom configuration file.
    type: string
    required: false
    default: '__UNSET__'

  extra-args:
    description: Additional arguments to pass directly to clang-tidy.
    type: string
    required: false
    default: '__UNSET__'

runs:
  using: "composite"
  steps:
    - name: Check runner OS
      shell: bash
      run: |
        printf "Checking runner OS...\n"
        if [ "$RUNNER_OS" != "Linux" ]; then
          printf "Error: OS %s is not supported.\n" "$RUNNER_OS"
          exit 1
        fi

    - name: Update apt-get
      shell: bash
      run: |
        printf "Updating apt-get...\n"
        if ! sudo apt-get update &>/dev/null; then
          printf "Error: failed to update apt-get.\n"
          exit 1
        fi

    - name: Install clang-tidy
      shell: bash
      run: bash "${{github.action_path}}/script/clang_tidy_install.sh"
      env:
        CLANG_TIDY_VERSION: "${{inputs.version}}"

    - name: Check code quality
      shell: bash
      run: bash "${{github.action_path}}/script/clang_tidy_check.sh"
      env:
        CLANG_TIDY_VERSION: "${{inputs.version}}"
        CLANG_TIDY_COMPILE_COMMANDS_PATH: "${{inputs.compile-commands-path}}"
        CLANG_TIDY_FILE_EXCLUDE_REGEX: "${{inputs.file-exclude-regex}}"
        CLANG_TIDY_CHECKS: "${{inputs.checks}}"
        CLANG_TIDY_WARNINGS_AS_ERRORS: "${{inputs.warnings-as-errors}}"
        CLANG_TIDY_HEADER_FILTER: "${{inputs.header-filter}}"
        CLANG_TIDY_CONFIG: "${{inputs.config}}"
        CLANG_TIDY_CONFIG_FILE: "${{inputs.config-file}}"
        CLANG_TIDY_EXTRA_ARGS: "${{inputs.extra-args}}"

